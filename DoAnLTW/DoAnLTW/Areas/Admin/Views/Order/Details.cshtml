@model DoAnLTW.Models.Order

@{
    ViewData["Title"] = "Chi tiết đơn hàng";
    Layout = "_LayoutAdmin";
}
<link rel="stylesheet" href="~/css/Order.css" />
<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3 text-gray-800">Chi tiết đơn hàng #@Model.Id</h1>
        <a asp-action="Index" class="bton btn-secondary">
            <i class="fas fa-arrow-left"></i> Quay lại
        </a>
    </div>

    <div class="row">
        <div class="col-md-4">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Thông tin sản phẩm</h6>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Sản phẩm</th>
                                    <th>Giá</th>
                                    <th>Số lượng</th>
                                    <th>Tổng</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.OrderDetails)
                                {
                                    <tr>
                                        <td>
                                            <div class="d-flex align-items-center">
                                                <img src="@item.Product.ImageUrl" alt="@item.Product.Name"
                                                     class="img-thumbnail me-2" style="width: 50px; height: 50px; object-fit: cover;">
                                                <div>
                                                    <h6 class="mb-0">@item.Product.Name</h6>
                                                    <small class="text-muted">Số lượng: @item.Quantity</small>
                                                </div>
                                            </div>
                                        </td>
                                        <td>@item.Price?.ToString("N0")đ</td>
                                        <td>@item.Quantity</td>
                                        <td>@((item.Price * item.Quantity)?.ToString("N0"))đ</td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot>
                                <tr>
                                    <td colspan="3" class="text-end"><strong>Tạm tính:</strong></td>
                                    <td>@Model.TotalPrice?.ToString("N0")đ</td>
                                </tr>
                                <tr>
                                    <td colspan="3" class="text-end"><strong>Giảm giá:</strong></td>
                                    <td>@(Model.DiscountAmount.HasValue ? Model.DiscountAmount.Value.ToString("N0") + "%" : "Không có")</td>
                                </tr>
                                <tr>
                                    <td colspan="3" class="text-end"><strong>Phí vận chuyển:</strong></td>
                                    <td>Miễn phí</td>
                                </tr>
                                <tr>
                                    <td colspan="3" class="text-end"><strong>Tổng cộng:</strong></td>
                                    <td><strong>@Model.FinalAmount?.ToString("N0")đ</strong></td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Thông tin đơn hàng</h6>
                </div>
                <div class="card-body">
                    <div class="order-info-item">
                        <span class="order-info-label">Mã đơn hàng:</span> #@Model.Id
                    </div>
                    <div class="order-info-item">
                        <span class="order-info-label">Ngày đặt:</span> @Model.OrderDate.ToString("dd/MM/yyyy HH:mm")
                    </div>
                    <div class="order-info-item">
                        <span class="order-info-label">Trạng thái:</span>
                        <select class="form-select form-select-sm status-select"
                                data-order-id="@Model.Id"
                                onchange="updateOrderStatus(this)">
                            @foreach (OrderStatus status in Enum.GetValues(typeof(OrderStatus)))
                            {
                                <option value="@status.ToString()" selected="@(Model.Status == status)">
                                    @GetStatusText(status)
                                </option>
                            }
                        </select>
                    </div>
                    <div class="order-info-item">
                        <span class="order-info-label">Khách hàng:</span> @Model.FullName
                    </div>
                    <div class="order-info-item">
                        <span class="order-info-label">Email:</span> @Model.ApplicationUser.Email
                    </div>
                    <div class="order-info-item">
                        <span class="order-info-label">Số điện thoại:</span> @Model.PhoneNumber
                    </div>
                    <div class="order-info-item">
                        <span class="order-info-label">Địa chỉ:</span> @Model.ShippingAddress
                    </div>
                    <div class="order-info-item">
                        <span class="order-info-label">Ghi chú:</span> @(string.IsNullOrEmpty(Model.Notes) ? "Không có" : Model.Notes)
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function updateOrderStatus(select) {
            const orderId = $(select).data('order-id');
            const newStatus = $(select).val();

            $.ajax({
                url: '/Admin/Order/UpdateStatus/' + orderId,
                type: 'POST',
                data: { newStatus: newStatus },
                success: function(response) {
                    if (response.success) {
                        showToast('success', response.message);
                    } else {
                        showToast('error', response.message);
                        // Reset select to previous value
                        $(select).val($(select).data('previous-value'));
                    }
                },
                error: function() {
                    showToast('error', 'Có lỗi xảy ra khi cập nhật trạng thái');
                    // Reset select to previous value
                    $(select).val($(select).data('previous-value'));
                }
            });
        }

        function showToast(type, message) {
            const toast = document.createElement('div');
            toast.className = `toast ${type}`;
            toast.textContent = message;
            document.body.appendChild(toast);

            setTimeout(() => toast.classList.add('show'), 10);

            setTimeout(() => {
                toast.classList.remove('show');
                setTimeout(() => toast.remove(), 300);
            }, 3000);
        }
    </script>
}

@functions {
    private string GetStatusText(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Pending => "Chờ xử lý",
            OrderStatus.Processing => "Đang xử lý",
            OrderStatus.Shipped => "Đã giao hàng",
            OrderStatus.Delivered => "Đã nhận hàng",
            OrderStatus.Cancelled => "Đã hủy",
            _ => status.ToString()
        };
    }
} 