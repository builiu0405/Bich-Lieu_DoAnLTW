@model IEnumerable<DoAnLTW.Models.Order>

@{
    ViewData["Title"] = "Quản lý đơn hàng";
    Layout = "_LayoutAdmin";
}
<link rel="stylesheet" href="~/css/Order.css" />
<div class="container-fluid">
    <h1 class="h3 mb-4 text-gray-800">Quản lý đơn hàng</h1>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Danh sách đơn hàng</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered" id="ordersTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>Mã đơn hàng</th>
                            <th>Ngày đặt</th>
                            <th>Khách hàng</th>
                            <th>Tổng tiền</th>
                            <th>Trạng thái</th>
                            <th>Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var order in Model)
                        {
                            <tr>
                                <td>@order.Id</td>
                                <td>@order.OrderDate.ToString("dd/MM/yyyy HH:mm")</td>
                                <td>@order.FullName</td>
                                <td>@order.FinalAmount?.ToString("N0")đ</td>
                                <td>
                                    <select class="form-select form-select-sm status-select"
                                            data-order-id="@order.Id"
                                            onchange="updateOrderStatus(this)">
                                        @foreach (OrderStatus status in Enum.GetValues(typeof(OrderStatus)))
                                        {
                                            <option value="@status.ToString()" selected="@(order.Status == status)">
                                                @GetStatusText(status)
                                            </option>
                                        }
                                    </select>
                                </td>
                                <td>
                                    <a asp-action="Details" asp-route-id="@order.Id"
                                       class="bton btn-info btn-sm">Xem
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@order.Id"
                                       class="bton btn-danger btn-sm">Xóa
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            $('#ordersTable').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.10.24/i18n/Vietnamese.json"
                }
            });
        });

        function updateOrderStatus(select) {
            const orderId = $(select).data('order-id');
            const newStatus = $(select).val();

            $.ajax({
                url: '/Admin/Order/UpdateStatus/' + orderId,
                type: 'POST',
                data: { newStatus: newStatus },
                success: function(response) {
                    if (response.success) {
                        showToast('success', response.message);
                    } else {
                        showToast('error', response.message);
                        // Reset select to previous value
                        $(select).val($(select).data('previous-value'));
                    }
                },
                error: function() {
                    showToast('error', 'Có lỗi xảy ra khi cập nhật trạng thái');
                    // Reset select to previous value
                    $(select).val($(select).data('previous-value'));
                }
            });
        }

        function showToast(type, message) {
            const toast = document.createElement('div');
            toast.className = `toast ${type}`;
            toast.textContent = message;
            document.body.appendChild(toast);

            setTimeout(() => toast.classList.add('show'), 10);

            setTimeout(() => {
                toast.classList.remove('show');
                setTimeout(() => toast.remove(), 300);
            }, 3000);
        }
    </script>
}

@functions {
    private string GetStatusText(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Pending => "Chờ xử lý",
            OrderStatus.Processing => "Đang xử lý",
            OrderStatus.Shipped => "Đã giao hàng",
            OrderStatus.Delivered => "Đã nhận hàng",
            OrderStatus.Cancelled => "Đã hủy",
            _ => status.ToString()
        };
    }
} 