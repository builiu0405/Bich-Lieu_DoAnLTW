@model DoAnLTW.Models.Product

@{
    ViewData["Title"] = "Chi tiết sản phẩm";
    Layout = "_LayoutProduct";
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
    <style>
        body {
            background-color: #fff7ed;
        }

        .product-detail-page {
            max-width: 1200px;
            margin: 2rem auto;
            padding: 1.5rem;
            background-color: #ffffff;
            border-radius: 0.5rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .page-title {
            font-size: 2rem;
            font-weight: 700;
            color: #7c2d12;
            text-align: center;
            margin-bottom: 2rem;
        }

        .product-layout {
            display: flex;
            flex-wrap: wrap;
            gap: 2rem;
            margin-bottom: 2rem;
        }

        .image-section {
            flex: 1;
            min-width: 300px;
        }

        .main-image {
            width: 100%;
            max-height: 400px;
            object-fit: cover;
            border-radius: 0.5rem;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .image-gallery {
            display: flex;
            gap: 0.5rem;
            margin-top: 1rem;
            overflow-x: auto;
        }

        .thumbnail {
            width: 80px;
            height: 80px;
            object-fit: cover;
            border-radius: 0.375rem;
            cursor: pointer;
            transition: transform 0.2s ease-in-out;
        }

            .thumbnail:hover {
                transform: scale(1.05);
                border: 2px solid #f59e0b;
            }

        .info-section {
            flex: 1;
            min-width: 300px;
            padding: 1rem;
        }

            .info-section dl dt {
                font-weight: 600;
                color: #7c2d12;
            }

            .info-section dl dd {
                color: #1f2937;
                margin-bottom: 1rem;
            }

        .button-container {
            display: flex;
            gap: 1rem;
            margin-top: 1.5rem;
        }

        .btn {
            padding: 0.75rem 1.5rem;
            border-radius: 0.375rem;
            font-weight: 600;
            transition: background-color 0.2s ease-in-out;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
        }

        .add-to-cart-btn {
            background-color: #f59e0b;
            color: #ffffff;
        }

            .add-to-cart-btn:hover {
                background-color: #d97706;
            }

        .back-btn {
            background-color: #6b7280;
            color: #ffffff;
        }

            .back-btn:hover {
                background-color: #4b5563;
            }

        .specifications-section, .Decription {
            margin-top: 2rem;
            padding: 1.5rem;
            background-color: #fff7ed;
            border-radius: 0.5rem;
        }

            .specifications-title, .Decription h3 {
                font-size: 1.5rem;
                font-weight: 600;
                color: #7c2d12;
                margin-bottom: 1rem;
            }

        .specifications-table {
            width: 100%;
            border-collapse: collapse;
        }

            .specifications-table th, .specifications-table td {
                padding: 0.75rem;
                border: 1px solid #d1d5db;
                text-align: left;
            }

            .specifications-table th {
                background-color: #f59e0b;
                color: #ffffff;
                font-weight: 600;
            }

        .product-section {
            margin-top: 2rem;
        }

        .section-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1rem;
        }

            .section-header h2 {
                font-size: 1.5rem;
                font-weight: 600;
                color: #7c2d12;
            }

        .view-all {
            color: #f59e0b;
            font-weight: 500;
        }

            .view-all:hover {
                color: #d97706;
            }

        .product-row-container {
            position: relative;
            display: flex;
            align-items: center;
        }

        .product-row {
            display: flex;
            overflow-x: auto;
            scroll-behavior: smooth;
            gap: 1rem;
            padding: 1rem 0;
        }

        .scroll-btn {
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            background-color: #f59e0b;
            color: #ffffff;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: background-color 0.2s ease-in-out;
        }

            .scroll-btn:hover {
                background-color: #d97706;
            }

        .scroll-left {
            left: -20px;
        }

        .scroll-right {
            right: -20px;
        }

        .review-form {
            margin-top: 2rem;
            padding: 1.5rem;
            background-color: #fff7ed;
            border-radius: 0.5rem;
        }

            .review-form h3 {
                font-size: 1.5rem;
                font-weight: 600;
                color: #7c2d12;
                margin-bottom: 1rem;
            }

            .review-form input,
            .review-form select,
            .review-form textarea {
                width: 100%;
                padding: 0.75rem;
                border: 1px solid #d1d5db;
                border-radius: 0.375rem;
                margin-bottom: 1rem;
                font-size: 1rem;
                color: #1f2937;
            }

                .review-form input:focus,
                .review-form select:focus,
                .review-form textarea:focus {
                    outline: none;
                    border-color: #f59e0b;
                    box-shadow: 0 0 0 3px rgba(245, 158, 11, 0.1);
                }

            .review-form button {
                padding: 0.75rem 1.5rem;
                background-color: #f59e0b;
                color: #ffffff;
                border-radius: 0.375rem;
                border: none;
                font-weight: 600;
                cursor: pointer;
                transition: background-color 0.2s ease-in-out;
            }

                .review-form button:hover {
                    background-color: #d97706;
                }

        .toast {
            position: fixed;
            bottom: 20px;
            right: 20px;
            padding: 1rem;
            border-radius: 0.375rem;
            color: #ffffff;
            font-weight: 500;
            z-index: 1000;
        }

            .toast.success {
                background-color: #f59e0b;
            }

            .toast.error {
                background-color: #b91c1c;
            }
    </style>
</head>
<body>
    @if (Model == null)
    {
        <div class="product-detail-page">
            <div class="alert alert-danger text-center">
                <h3>Lỗi</h3>
                <p>Sản phẩm không tồn tại hoặc không thể tải dữ liệu.</p>
                <a asp-action="Index" class="btn back-btn">Quay lại danh sách</a>
            </div>
        </div>
    }
    else
    {
        <div class="product-detail-page">
            <h1 class="page-title">Chi tiết sản phẩm</h1>
            <div class="product-layout">
                <!-- Ảnh chính và Gallery -->
                <div class="image-section">
                    <img id="mainImage" src="@(Model.ImageUrl ?? "/images/placeholder.jpg")" class="main-image" alt="@(Model.Name ?? "Sản phẩm")" />

                    @if (Model.ImageUrls != null && Model.ImageUrls.Any())
                    {
                        <div class="image-gallery">
                            @foreach (var image in Model.ImageUrls)
                            {
                                <img src="@(image.ImageUrl ?? "/images/placeholder.jpg")" class="thumbnail" alt="@(Model.Name ?? "Sản phẩm")" onclick="changeMainImage(this)" />
                            }
                        </div>
                    }
                    else
                    {
                        <p class="text-muted">Không có ảnh bổ sung.</p>
                    }
                </div>
                <!-- Thông tin sản phẩm -->
                <div class="info-section">
                    <dl class="row">
                        <dt class="col-sm-4">Tên sản phẩm</dt>
                        <dd class="col-sm-8">@(Model.Name ?? "Không có tên")</dd>

                        <dt class="col-sm-4">Giá</dt>
                        <dd class="col-sm-8" style="text-decoration: line-through; font-size: 0.7rem;">@(Model.Price.ToString("N0") ?? "0") đ</dd>

                        <dt class="col-sm-4">Giá khuyến mãi</dt>
                        <dd class="col-sm-8">@((Model.Price * (1 - (Model.Discount ?? 0) / 100)).ToString("N0") ?? "0") đ</dd>

                        <dt class="col-sm-4">Số lượng hàng</dt>
                        <dd class="col-sm-8">@(Model.Stock.ToString() ?? "0")</dd>

                        <dt class="col-sm-4">Chi nhánh</dt>
                        <dd class="col-sm-8">@(Model.Brand != null ? Model.Brand.Name : "<span class='text-muted'>Chưa có</span>")</dd>
                    </dl>
                    <div class="button-container">
                        <button class="btn add-to-cart-btn" data-product-id="@(Model.Id.ToString() ?? "0")">
                            Thêm vào giỏ hàng
                            <i class="fas fa-shopping-cart"></i>
                        </button>
                        <a asp-action="Index" class="btn back-btn">Quay lại danh sách</a>
                    </div>
                </div>
            </div>

            <!-- Thông số kỹ thuật -->
            <div class="specifications-section">
                <h3 class="specifications-title">Thông số kỹ thuật</h3>
                @if (Model.ProductSpecifications != null && Model.ProductSpecifications.Any())
                {
                    <table class="specifications-table">
                        <thead>
                            <tr>
                                <th>Tên thông số</th>
                                <th>Giá trị</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var spec in Model.ProductSpecifications)
                            {
                                <tr>
                                    <td>@(spec.Key ?? "Không có")</td>
                                    <td>@(spec.Value ?? "Không có")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <p class="text-muted">Không có thông số kỹ thuật nào.</p>
                }
            </div>
            <div class="Decription">
                <h3>Mô tả</h3>
                @Html.Raw(Model.Description ?? "<p class='text-muted'>Không có mô tả.</p>")
            </div>
            <section class="product-section">
                <div class="section-header">
                    <h2>Sản phẩm bán chạy</h2>
                    <a href="#" class="view-all">Xem tất cả</a>
                </div>
                <div class="product-row-container">
                    <button class="scroll-btn scroll-left" aria-label="Scroll left">
                        <i class="fas fa-chevron-left"></i>
                    </button>
                    <div class="product-row">
                        @await Component.InvokeAsync("ProductDisplay", new { type = "bestseller", count = 8 })
                    </div>
                    <button class="scroll-btn scroll-right" aria-label="Scroll right">
                        <i class="fas fa-chevron-right"></i>
                    </button>
                </div>
            </section>
            <section class="product-section">
                <div class="section-header">
                    <h2>Sản phẩm nổi bật</h2>
                    <a href="#" class="view-all">Xem tất cả</a>
                </div>
                <div class="product-row-container">
                    <button class="scroll-btn scroll-left" aria-label="Scroll left">
                        <i class="fas fa-chevron-left"></i>
                    </button>
                    <div class="product-row">
                        @await Component.InvokeAsync("ProductDisplay", new { type = "featured", count = 8 })
                    </div>
                    <button class="scroll-btn scroll-right" aria-label="Scroll right">
                        <i class="fas fa-chevron-right"></i>
                    </button>
                </div>
            </section>
            <!-- Hiển thị đánh giá -->
            <div id="reviews-container">
                @if (Model.Reviews != null)
                {
                    @await Html.PartialAsync("_ReviewList", Model.Reviews)
                }
                else
                {
                    <p class="text-muted">Chưa có đánh giá nào.</p>
                }
            </div>

            <!-- Form thêm đánh giá -->
            <div class="review-form">
                <h3>Viết đánh giá</h3>
                <form id="reviewForm">
                    <input type="hidden" name="ProductId" value="@(Model.Id.ToString() ?? "0")" />
                    <input type="text" name="UserName" placeholder="Tên của bạn" required />
                    <select name="Rating">
                        <option value="5">⭐⭐⭐⭐⭐ - Rất tốt</option>
                        <option value="4">⭐⭐⭐⭐ - Tốt</option>
                        <option value="3">⭐⭐⭐ - Trung bình</option>
                        <option value="2">⭐⭐ - Kém</option>
                        <option value="1">⭐ - Rất kém</option>
                    </select>
                    <textarea name="Comment" placeholder="Viết nhận xét của bạn" required></textarea>
                    <button type="submit">Gửi đánh giá</button>
                </form>
            </div>
        </div>
    }

    @section Scripts {
        <script>
            function changeMainImage(thumbnail) {
                var mainImage = document.getElementById("mainImage");
                if (mainImage) {
                    mainImage.src = thumbnail.src;
                }
            }
        </script>
        <script>
            $(document).ready(function() {
                $("#reviewForm").submit(function(e) {
                    e.preventDefault();
                    $.post("/Review/AddReview", $(this).serialize(), function(response) {
                        alert(response.message);
                        $("#reviewForm")[0].reset();
                    });
                });
            });
        </script>
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
        <script>
            document.addEventListener('DOMContentLoaded', function() {
                // Add to cart functionality
                document.querySelectorAll('.add-to-cart-btn').forEach(button => {
                    button.addEventListener('click', async function(e) {
                        e.preventDefault();
                        const productId = this.dataset.productId;
                        try {
                            const response = await fetch('/ShoppingCart/AddToCart', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify({
                                    productId: parseInt(productId),
                                    quantity: 1
                                })
                            });

                            const result = await response.json();
                            if (result.success) {
                                // Show success message
                                const toast = document.createElement('div');
                                toast.className = 'toast success';
                                toast.textContent = result.message;
                                document.body.appendChild(toast);
                                setTimeout(() => toast.remove(), 3000);
                            } else {
                                // Show error message
                                const toast = document.createElement('div');
                                toast.className = 'toast error';
                                toast.textContent = result.message;
                                document.body.appendChild(toast);
                                setTimeout(() => toast.remove(), 3000);
                            }
                        } catch (error) {
                            console.error('Error:', error);
                            // Show error message
                            const toast = document.createElement('div');
                            toast.className = 'toast error';
                            toast.textContent = 'Có lỗi xảy ra khi thêm vào giỏ hàng';
                            document.body.appendChild(toast);
                            setTimeout(() => toast.remove(), 3000);
                        }
                    });
                });

                // Horizontal scroll for product rows
                document.querySelectorAll('.product-row-container').forEach(container => {
                    const row = container.querySelector('.product-row');
                    const leftBtn = container.querySelector('.scroll-left');
                    const rightBtn = container.querySelector('.scroll-right');

                    // Ẩn nút scroll khi không cần thiết
                    const updateScrollButtons = () => {
                        leftBtn.style.display = row.scrollLeft > 0 ? 'flex' : 'none';
                        rightBtn.style.display = row.scrollLeft < (row.scrollWidth - row.clientWidth) ? 'flex' : 'none';
                    };

                    row.addEventListener('scroll', updateScrollButtons);
                    window.addEventListener('resize', updateScrollButtons);
                    updateScrollButtons(); // Kiểm tra trạng thái ban đầu

                    leftBtn.addEventListener('click', () => {
                        row.scrollBy({
                            left: -300,
                            behavior: 'smooth'
                        });
                    });

                    rightBtn.addEventListener('click', () => {
                        row.scrollBy({
                            left: 300,
                            behavior: 'smooth'
                        });
                    });
                });
            });
        </script>
    }
</body>
</html>